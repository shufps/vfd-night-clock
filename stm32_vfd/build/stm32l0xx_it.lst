ARM GAS  /tmp/ccHuqcf7.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB34:
  26              		.file 1 "Core/Src/stm32l0xx_it.c"
   1:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l0xx_it.c **** /**
   3:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   5:Core/Src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l0xx_it.c ****   * @attention
   8:Core/Src/stm32l0xx_it.c ****   *
   9:Core/Src/stm32l0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32l0xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32l0xx_it.c ****   *
  12:Core/Src/stm32l0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32l0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32l0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32l0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32l0xx_it.c ****   *
  17:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32l0xx_it.c ****   */
  19:Core/Src/stm32l0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32l0xx_it.c **** 
  21:Core/Src/stm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32l0xx_it.c **** #include "main.h"
  23:Core/Src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  24:Core/Src/stm32l0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32l0xx_it.c **** extern RTC_HandleTypeDef hrtc;
  27:Core/Src/stm32l0xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32l0xx_it.c **** 
  29:Core/Src/stm32l0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32l0xx_it.c **** 
  32:Core/Src/stm32l0xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccHuqcf7.s 			page 2


  33:Core/Src/stm32l0xx_it.c **** 
  34:Core/Src/stm32l0xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32l0xx_it.c **** 
  37:Core/Src/stm32l0xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32l0xx_it.c **** 
  39:Core/Src/stm32l0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32l0xx_it.c **** 
  42:Core/Src/stm32l0xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32l0xx_it.c **** 
  44:Core/Src/stm32l0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32l0xx_it.c **** 
  47:Core/Src/stm32l0xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32l0xx_it.c **** 
  49:Core/Src/stm32l0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32l0xx_it.c **** 
  52:Core/Src/stm32l0xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32l0xx_it.c **** 
  54:Core/Src/stm32l0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32l0xx_it.c **** 
  57:Core/Src/stm32l0xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32l0xx_it.c **** 
  59:Core/Src/stm32l0xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32l0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  61:Core/Src/stm32l0xx_it.c **** extern RTC_HandleTypeDef hrtc;
  62:Core/Src/stm32l0xx_it.c **** extern TIM_HandleTypeDef htim21;
  63:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32l0xx_it.c **** 
  65:Core/Src/stm32l0xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32l0xx_it.c **** 
  67:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32l0xx_it.c **** /**
  71:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32l0xx_it.c ****   */
  73:Core/Src/stm32l0xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32l0xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  75:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l0xx_it.c **** 
  77:Core/Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32l0xx_it.c **** 
  80:Core/Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32l0xx_it.c **** }
  32              		.loc 1 81 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
ARM GAS  /tmp/ccHuqcf7.s 			page 3


  35              		.cfi_endproc
  36              	.LFE34:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB35:
  82:Core/Src/stm32l0xx_it.c **** 
  83:Core/Src/stm32l0xx_it.c **** /**
  84:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32l0xx_it.c ****   */
  86:Core/Src/stm32l0xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32l0xx_it.c **** {
  47              		.loc 1 87 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  88:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32l0xx_it.c **** 
  90:Core/Src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32l0xx_it.c ****   while (1)
  54              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Core/Src/stm32l0xx_it.c ****   {
  93:Core/Src/stm32l0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32l0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32l0xx_it.c ****   }
  55              		.loc 1 95 3 discriminator 1 view .LVU4
  91:Core/Src/stm32l0xx_it.c ****   {
  56              		.loc 1 91 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE35:
  61              		.section	.text.SVC_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	SVC_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	SVC_Handler:
  69              	.LFB36:
  96:Core/Src/stm32l0xx_it.c **** }
  97:Core/Src/stm32l0xx_it.c **** 
  98:Core/Src/stm32l0xx_it.c **** /**
  99:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 100:Core/Src/stm32l0xx_it.c ****   */
 101:Core/Src/stm32l0xx_it.c **** void SVC_Handler(void)
 102:Core/Src/stm32l0xx_it.c **** {
  70              		.loc 1 102 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHuqcf7.s 			page 4


  74              		@ link register save eliminated.
 103:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 104:Core/Src/stm32l0xx_it.c **** 
 105:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 106:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 107:Core/Src/stm32l0xx_it.c **** 
 108:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 109:Core/Src/stm32l0xx_it.c **** }
  75              		.loc 1 109 1 view .LVU7
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE36:
  81              		.section	.text.PendSV_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	PendSV_Handler
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	PendSV_Handler:
  89              	.LFB37:
 110:Core/Src/stm32l0xx_it.c **** 
 111:Core/Src/stm32l0xx_it.c **** /**
 112:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Pendable request for system service.
 113:Core/Src/stm32l0xx_it.c ****   */
 114:Core/Src/stm32l0xx_it.c **** void PendSV_Handler(void)
 115:Core/Src/stm32l0xx_it.c **** {
  90              		.loc 1 115 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 116:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 117:Core/Src/stm32l0xx_it.c **** 
 118:Core/Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 119:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 120:Core/Src/stm32l0xx_it.c **** 
 121:Core/Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 122:Core/Src/stm32l0xx_it.c **** }
  95              		.loc 1 122 1 view .LVU9
  96              		@ sp needed
  97 0000 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE37:
 101              		.section	.text.SysTick_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	SysTick_Handler
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 108              	SysTick_Handler:
 109              	.LFB38:
 123:Core/Src/stm32l0xx_it.c **** 
 124:Core/Src/stm32l0xx_it.c **** extern uint32_t systick;
 125:Core/Src/stm32l0xx_it.c **** 
 126:Core/Src/stm32l0xx_it.c **** /**
 127:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System tick timer.
ARM GAS  /tmp/ccHuqcf7.s 			page 5


 128:Core/Src/stm32l0xx_it.c ****   */
 129:Core/Src/stm32l0xx_it.c **** void SysTick_Handler(void)
 130:Core/Src/stm32l0xx_it.c **** {
 110              		.loc 1 130 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 131:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 132:Core/Src/stm32l0xx_it.c **** 
 133:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 134:Core/Src/stm32l0xx_it.c ****   HAL_IncTick();
 119              		.loc 1 134 3 view .LVU11
 120 0002 FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL0:
 135:Core/Src/stm32l0xx_it.c ****   systick++;
 122              		.loc 1 135 3 view .LVU12
 123              		.loc 1 135 10 is_stmt 0 view .LVU13
 124 0006 024A     		ldr	r2, .L7
 125 0008 1368     		ldr	r3, [r2]
 126 000a 0133     		adds	r3, r3, #1
 127 000c 1360     		str	r3, [r2]
 136:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 137:Core/Src/stm32l0xx_it.c **** 
 138:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 139:Core/Src/stm32l0xx_it.c **** }
 128              		.loc 1 139 1 view .LVU14
 129              		@ sp needed
 130 000e 10BD     		pop	{r4, pc}
 131              	.L8:
 132              		.align	2
 133              	.L7:
 134 0010 00000000 		.word	systick
 135              		.cfi_endproc
 136              	.LFE38:
 138              		.section	.text.RTC_IRQHandler,"ax",%progbits
 139              		.align	1
 140              		.global	RTC_IRQHandler
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	RTC_IRQHandler:
 146              	.LFB39:
 140:Core/Src/stm32l0xx_it.c **** 
 141:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
 142:Core/Src/stm32l0xx_it.c **** /* STM32L0xx Peripheral Interrupt Handlers                                    */
 143:Core/Src/stm32l0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 144:Core/Src/stm32l0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 145:Core/Src/stm32l0xx_it.c **** /* please refer to the startup file (startup_stm32l0xx.s).                    */
 146:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
 147:Core/Src/stm32l0xx_it.c **** 
 148:Core/Src/stm32l0xx_it.c **** /**
 149:Core/Src/stm32l0xx_it.c ****   * @brief This function handles RTC global interrupt through EXTI lines 17, 19 and 20 and LSE CSS 
ARM GAS  /tmp/ccHuqcf7.s 			page 6


 150:Core/Src/stm32l0xx_it.c ****   */
 151:Core/Src/stm32l0xx_it.c **** void RTC_IRQHandler(void)
 152:Core/Src/stm32l0xx_it.c **** {
 147              		.loc 1 152 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 153:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN RTC_IRQn 0 */
 154:Core/Src/stm32l0xx_it.c **** 
 155:Core/Src/stm32l0xx_it.c ****   /* USER CODE END RTC_IRQn 0 */
 156:Core/Src/stm32l0xx_it.c ****   HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 156              		.loc 1 156 3 view .LVU16
 157 0002 0248     		ldr	r0, .L10
 158 0004 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerIRQHandler
 159              	.LVL1:
 157:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN RTC_IRQn 1 */
 158:Core/Src/stm32l0xx_it.c **** 
 159:Core/Src/stm32l0xx_it.c ****   /* USER CODE END RTC_IRQn 1 */
 160:Core/Src/stm32l0xx_it.c **** }
 160              		.loc 1 160 1 is_stmt 0 view .LVU17
 161              		@ sp needed
 162 0008 10BD     		pop	{r4, pc}
 163              	.L11:
 164 000a C046     		.align	2
 165              	.L10:
 166 000c 00000000 		.word	hrtc
 167              		.cfi_endproc
 168              	.LFE39:
 170              		.section	.text.TIM21_IRQHandler,"ax",%progbits
 171              		.align	1
 172              		.global	TIM21_IRQHandler
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 177              	TIM21_IRQHandler:
 178              	.LFB40:
 161:Core/Src/stm32l0xx_it.c **** 
 162:Core/Src/stm32l0xx_it.c **** /**
 163:Core/Src/stm32l0xx_it.c ****   * @brief This function handles TIM21 global interrupt.
 164:Core/Src/stm32l0xx_it.c ****   */
 165:Core/Src/stm32l0xx_it.c **** void TIM21_IRQHandler(void)
 166:Core/Src/stm32l0xx_it.c **** {
 179              		.loc 1 166 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 167:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN TIM21_IRQn 0 */
ARM GAS  /tmp/ccHuqcf7.s 			page 7


 168:Core/Src/stm32l0xx_it.c **** 
 169:Core/Src/stm32l0xx_it.c ****   /* USER CODE END TIM21_IRQn 0 */
 170:Core/Src/stm32l0xx_it.c ****   HAL_TIM_IRQHandler(&htim21);
 188              		.loc 1 170 3 view .LVU19
 189 0002 0248     		ldr	r0, .L13
 190 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 191              	.LVL2:
 171:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN TIM21_IRQn 1 */
 172:Core/Src/stm32l0xx_it.c **** 
 173:Core/Src/stm32l0xx_it.c ****   /* USER CODE END TIM21_IRQn 1 */
 174:Core/Src/stm32l0xx_it.c **** }
 192              		.loc 1 174 1 is_stmt 0 view .LVU20
 193              		@ sp needed
 194 0008 10BD     		pop	{r4, pc}
 195              	.L14:
 196 000a C046     		.align	2
 197              	.L13:
 198 000c 00000000 		.word	htim21
 199              		.cfi_endproc
 200              	.LFE40:
 202              		.section	.text.USB_IRQHandler,"ax",%progbits
 203              		.align	1
 204              		.global	USB_IRQHandler
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 209              	USB_IRQHandler:
 210              	.LFB41:
 175:Core/Src/stm32l0xx_it.c **** 
 176:Core/Src/stm32l0xx_it.c **** /**
 177:Core/Src/stm32l0xx_it.c ****   * @brief This function handles USB event interrupt / USB wake-up interrupt through EXTI line 18.
 178:Core/Src/stm32l0xx_it.c ****   */
 179:Core/Src/stm32l0xx_it.c **** void USB_IRQHandler(void)
 180:Core/Src/stm32l0xx_it.c **** {
 211              		.loc 1 180 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 181:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 182:Core/Src/stm32l0xx_it.c **** 
 183:Core/Src/stm32l0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 184:Core/Src/stm32l0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 220              		.loc 1 184 3 view .LVU22
 221 0002 0248     		ldr	r0, .L16
 222 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 223              	.LVL3:
 185:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 186:Core/Src/stm32l0xx_it.c **** 
 187:Core/Src/stm32l0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 188:Core/Src/stm32l0xx_it.c **** }
 224              		.loc 1 188 1 is_stmt 0 view .LVU23
 225              		@ sp needed
ARM GAS  /tmp/ccHuqcf7.s 			page 8


 226 0008 10BD     		pop	{r4, pc}
 227              	.L17:
 228 000a C046     		.align	2
 229              	.L16:
 230 000c 00000000 		.word	hpcd_USB_FS
 231              		.cfi_endproc
 232              	.LFE41:
 234              		.text
 235              	.Letext0:
 236              		.file 2 "/home/thomas/programme/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_defa
 237              		.file 3 "/home/thomas/programme/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h
 238              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l052xx.h"
 239              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 240              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 241              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc.h"
 242              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 243              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usb.h"
 244              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pcd.h"
 245              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc_ex.h"
 246              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/ccHuqcf7.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_it.c
     /tmp/ccHuqcf7.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccHuqcf7.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccHuqcf7.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccHuqcf7.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccHuqcf7.s:62     .text.SVC_Handler:0000000000000000 $t
     /tmp/ccHuqcf7.s:68     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccHuqcf7.s:82     .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccHuqcf7.s:88     .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccHuqcf7.s:102    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccHuqcf7.s:108    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccHuqcf7.s:134    .text.SysTick_Handler:0000000000000010 $d
     /tmp/ccHuqcf7.s:139    .text.RTC_IRQHandler:0000000000000000 $t
     /tmp/ccHuqcf7.s:145    .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
     /tmp/ccHuqcf7.s:166    .text.RTC_IRQHandler:000000000000000c $d
     /tmp/ccHuqcf7.s:171    .text.TIM21_IRQHandler:0000000000000000 $t
     /tmp/ccHuqcf7.s:177    .text.TIM21_IRQHandler:0000000000000000 TIM21_IRQHandler
     /tmp/ccHuqcf7.s:198    .text.TIM21_IRQHandler:000000000000000c $d
     /tmp/ccHuqcf7.s:203    .text.USB_IRQHandler:0000000000000000 $t
     /tmp/ccHuqcf7.s:209    .text.USB_IRQHandler:0000000000000000 USB_IRQHandler
     /tmp/ccHuqcf7.s:230    .text.USB_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
systick
HAL_RTCEx_WakeUpTimerIRQHandler
hrtc
HAL_TIM_IRQHandler
htim21
HAL_PCD_IRQHandler
hpcd_USB_FS
